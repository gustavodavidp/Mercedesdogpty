@page "/duenos"
@inject IDialogService Dialog
@using LetrasBlog.Infraestructure.Entities;
@using System.Net.Http;
@using Newtonsoft.Json;


<PageTitle>Dueños</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">Dueños</MudText>
<br />
<MudButton Variant="Variant.Filled" Color="Color.Primary" IconClass="@Icons.Material.Filled.PlusOne">
    Crear Registro
</MudButton>
<br />
@if(response == null)
{
    <label>Cargando...</label>
}
else
{
    <div class="col-12">
        <MudTable Items="@Elements" Dense="true" >
            <ToolBarContent>
                <MudText Typo="Typo.h6">Registros</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Nombre</MudTh>
                <MudTh>Teléfonos</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nr">@context.Id</MudTd>
                <MudTd DataLabel="Sign">@context.Nombre</MudTd>
                <MudTd DataLabel="Name">@context.Telefono</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </div>
}


@code {
    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.ExtraExtraLarge, FullWidth = true };

    private static readonly HttpClient client = new HttpClient();
    public List<LetrasBlog.Infraestructure.Entities.Users.Data> _UsersList { get ; set ; } = new List<LetrasBlog.Infraestructure.Entities.Users.Data>() ;
    public LetrasBlog.Infraestructure.Entities.Users.response UsersResponse { get ; set ; } = new LetrasBlog.Infraestructure.Entities.Users.response() ;
    public string response;
    private string searchString1 = "";

    private IEnumerable<Duenos.Data> Elements = new List<Duenos.Data>()
    {
        new Duenos.Data()
        { Id = 1, Nombre = "Juan Chacón", Telefono = "65656767" },
        new Duenos.Data() 
        { Id = 2, Nombre = "Gustavo Polanco", Telefono = "64646868" },
        new Duenos.Data() 
        { Id = 3, Nombre = "Jose Perez", Telefono = "68901234" }
    };


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var content = await client.GetAsync("https://localhost:44342" + "/api/Users/GetUsers");
            //Imprimir en consola
            response = content.Content.ReadAsStringAsync().ToString();
            Console.WriteLine(await content.Content.ReadAsStringAsync());

            //Procesar respuesta
            var responseString = await content.Content.ReadAsStringAsync();
            UsersResponse = JsonConvert.DeserializeObject<LetrasBlog.Infraestructure.Entities.Users.response>(responseString);
            _UsersList = UsersResponse.Detail;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.ToString());
        }
    }


}
